{"version":3,"sources":["images/logopic.png","images/logowordblack.png","images/bg.jpg","images/logo.png","images/logoword.png","login/private/privateroute.js","login/reducers/authReducer.js","login/reducers/errorReducer.js","login/reducers/index.js","login/actions/types.js","store.js","login/utils/setAuthToken.js","login/actions/authAction.js","components/admin/login.jsx","components/admin/register.jsx","components/admin/home.jsx","actions/custAction.js","components/admin/banner.jsx","components/admin/product.jsx","components/admin/dashboard.jsx","components/client/banner.jsx","components/client/customer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","connect","state","auth","Component","component","rest","render","props","isAuthenticated","to","isEmpty","require","initialState","user","loading","combineReducers","action","type","payload","errors","middleware","thunk","store","createStore","rootReducer","applyMiddleware","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","logoutUser","dispatch","localStorage","removeItem","uploadBanner","data","post","Login","onChange","e","setState","target","id","value","onSubmit","preventDefault","userData","username","password","loginUser","this","history","push","className","style","backgroundImage","Bg","src","Logo","alt","Word","noValidate","aria-label","aria-describedby","error","placeholder","classnames","invalid","usernamenotfound","passwordincorrect","then","res","setItem","jwt_decode","catch","err","response","Register","newUser","password2","registerUser","nextProps","withRouter","Home","split","getBanners","get","Banner","updateBanner","count","banners","console","log","names","map","object","name","Array","fill","zero","index","key","scope","readFile","file","files","loaded","FormData","append","prevProps","prevState","image","Product","Dashboard","onLogoutClick","mode","handleMode","bind","onClick","width","height","data-toggle","data-target","aria-controls","aria-expanded","indicators","li","data-slide-to","paths","length","data-ride","href","role","data-slide","aria-hidden","Customer","menu","toggle","Logop","Logow","jwtToken","currentTime","Date","now","exp","window","location","App","exact","path","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.468efc43.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logopic.e1f5f591.png\";","module.exports = __webpack_public_path__ + \"static/media/logowordblack.adb442a5.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.8b69af64.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.fef593c9.png\";","module.exports = __webpack_public_path__ + \"static/media/logoword.d3eaf389.png\";","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )\r\n    }\r\n  />\r\n);\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\r\nconst isEmpty = require(\"is-empty\");\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  loading: false\r\n};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\r\nconst initialState = {};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer\r\n});\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./login/reducers\";\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  applyMiddleware(...middleware)\r\n);\r\nexport default store;\r\n","import axios from \"axios\";\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/register\", userData)\r\n    .then(res => history.push(\"/admin\")) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n      const { token } = res.data;\r\n      // Set token to localStorage\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current admin to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n\r\nexport const uploadBanner = data => {\r\n  return axios.post(\"/api/banner\", data);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../login/actions/authAction\";\r\nimport classnames from \"classnames\";\r\nimport Logo from \"../../images/logopic.png\";\r\nimport Word from \"../../images/logowordblack.png\";\r\nimport Bg from \"../../images/bg.jpg\";\r\nimport \"./admin.css\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/admin/dashboard\");\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(props, state) {\r\n    if (props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/admin/dashboard\"); // push user to dashboard when they login\r\n    }\r\n    if (props.errors !== this.state.errors) {\r\n      this.setState({\r\n        errors: props.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.loginUser(userData);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <article\r\n        className=\"container-extended h-100\"\r\n        id=\"bg\"\r\n        style={{ backgroundImage: `url(${Bg})` }}\r\n      >\r\n        <div className=\"row h-100 justify-content-center align-items-center\">\r\n          <div className=\"col shadow p-5\" id=\"form\">\r\n            <img src={Logo} className=\"img-fluid\" alt=\"logo\" />\r\n            <img src={Word} className=\"img-fluid\" alt=\"word\" />\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"input-group mt-4\">\r\n                <input\r\n                  aria-label=\"Username\"\r\n                  aria-describedby=\"basic-addon1\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.username}\r\n                  error={errors.username}\r\n                  id=\"username\"\r\n                  placeholder=\"Нэвтрэх нэр\"\r\n                  className={classnames(\"form-control\", {\r\n                    invalid: errors.username || errors.usernamenotfound\r\n                  })}\r\n                />\r\n              </div>\r\n              <small className=\"text-danger pl-2\">\r\n                {errors.username}\r\n                {errors.usernamenotfound}\r\n              </small>\r\n\r\n              <div className=\"input-group\">\r\n                <input\r\n                  aria-label=\"Password\"\r\n                  aria-describedby=\"basic-addon1\"\r\n                  type=\"password\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                  id=\"password\"\r\n                  placeholder=\"Нууц үг\"\r\n                  className={classnames(\"form-control\", {\r\n                    invalid: errors.password || errors.passwordincorrect\r\n                  })}\r\n                />\r\n              </div>\r\n              <small className=\"text-danger pl-2\">\r\n                {errors.password}\r\n                {errors.passwordincorrect}\r\n              </small>\r\n\r\n              <div className=\"input-group justify-content-center\">\r\n                <button className=\"btn btn-primary mb-3\" type=\"submit\">\r\n                  Нэвтрэх\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../login/actions/authAction\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/admin/dashboard\");\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <article className=\"container\">\r\n        <div className=\"row justify-content-sm-center m-5\">\r\n          <div className=\"col-sm-5\">\r\n            <div className=\"sub-container-sm shadow p-4 mb-5 bg-white rounded\">\r\n              <center>\r\n                <h4>\r\n                  <b>Register</b> below\r\n                </h4>\r\n                <p className=\"text-secondary\">\r\n                  Already have an acc?{\" \"}\r\n                  <Link className=\"highlight\" to=\"/admin\">\r\n                    {\" \"}\r\n                    Log In\r\n                  </Link>\r\n                </p>\r\n              </center>\r\n              <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"input-group p-2\">\r\n                  <input\r\n                    onChange={this.onChange}\r\n                    value={this.state.username}\r\n                    error={errors.username}\r\n                    id=\"username\"\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    className={classnames(\"form-control\", {\r\n                      invalid: errors.username\r\n                    })}\r\n                  />\r\n                </div>\r\n                <span className=\"text-danger\">{errors.username}</span>\r\n\r\n                <div className=\"input-group p-2\">\r\n                  <input\r\n                    onChange={this.onChange}\r\n                    value={this.state.password}\r\n                    error={errors.password}\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    className={classnames(\"form-control\", {\r\n                      invalid: errors.password\r\n                    })}\r\n                  />\r\n                </div>\r\n                <span className=\"text-danger\">{errors.password}</span>\r\n\r\n                <div className=\"input-group p-2\">\r\n                  <input\r\n                    onChange={this.onChange}\r\n                    value={this.state.password2}\r\n                    error={errors.password2}\r\n                    id=\"password2\"\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    className={classnames(\"form-control\", {\r\n                      invalid: errors.password2\r\n                    })}\r\n                  />\r\n                </div>\r\n                <span className=\"text-danger\">{errors.password2}</span>\r\n\r\n                <div className=\"input-group justify-content-md-center\">\r\n                  <button className=\"btn btn-primary m-2\" type=\"submit\">\r\n                    Register\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser }\r\n)(withRouter(Register));\r\n","import React, { Component } from \"react\";\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const { user } = this.props;\r\n    return (\r\n      <h4 className=\"overlay\">\r\n        <span>\r\n          <b>Тавтай морилно уу</b>{\" \"}\r\n        </span>\r\n        <span>{user.username.split(\" \")[0]}</span>{\" \"}\r\n        <span className=\"text-primary\">та амжилттай нэвтэрлээ.</span>\r\n      </h4>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import axios from \"axios\";\r\n\r\nexport const getBanners = () => {\r\n  return axios.get(\"/api/banner\");\r\n};\r\n","import React, { Component } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { getBanners } from \"../../actions/custAction\";\r\nimport { uploadBanner } from \"../../login/actions/authAction\";\r\n\r\nclass Banner extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: \"\",\r\n      banners: [],\r\n      name: \"\",\r\n      file: null,\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  updateBanner = () => {\r\n    getBanners()\r\n      .then(res => {\r\n        this.setState({\r\n          count: res.data.count,\r\n          banners: res.data.banners\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateBanner();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.banners !== this.state.banners) {\r\n      this.updateBanner();\r\n    }\r\n  }\r\n\r\n  banners = () => {\r\n    const names = this.state.banners.map(object => {\r\n      return object.name;\r\n    });\r\n    var banners = new Array(this.state.count).fill(0).map((zero, index) => (\r\n      <tr key={index}>\r\n        <th scope=\"col\">{index + 1}</th>\r\n        <td>{names[index]}</td>\r\n        <td>testing</td>\r\n      </tr>\r\n    ));\r\n    return banners;\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  readFile = e => {\r\n    this.setState({\r\n      file: e.target.files[0],\r\n      loaded: 0\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const data = new FormData();\r\n    data.append(\"name\", this.state.name);\r\n    data.append(\"banner\", this.state.file);\r\n    uploadBanner(data)\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-sm p-5\">\r\n          <h3 className=\"text-center\">Жагсаалт</h3>\r\n\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-hover\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Нэр</th>\r\n                  <th scope=\"col\">Тайлбар</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{this.banners()}</tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm p-5\">\r\n          <h3 className=\"text-center\">Баннер нэмэх</h3>\r\n\r\n          <form noValidate onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                aria-label=\"Name\"\r\n                aria-describedby=\"basic-addon1\"\r\n                onChange={this.onChange}\r\n                value={this.state.name}\r\n                error={errors.name}\r\n                id=\"name\"\r\n                placeholder=\"Баннерийн нэр\"\r\n                className={classnames(\"form-control\", {\r\n                  invalid: errors.name\r\n                })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"file\"\r\n                name=\"file\"\r\n                aria-label=\"Image\"\r\n                onChange={this.readFile}\r\n                error={errors.image}\r\n                id=\"image\"\r\n                className={classnames(\"file-input\", {\r\n                  invalid: errors.image\r\n                })}\r\n              />\r\n            </div>\r\n            <div className=\"input-group justify-content-center\">\r\n              <button className=\"btn btn-primary mt-3\" type=\"submit\">\r\n                Нэмэх\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Banner;\r\n","import React, { Component } from \"react\";\r\nclass Product extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return <div>product</div>;\r\n  }\r\n}\r\n\r\nexport default Product;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../login/actions/authAction\";\r\nimport Logo from \"../../images/logo.png\";\r\n\r\nimport Home from \"./home\";\r\nimport Banner from \"./banner\";\r\nimport Prodoct from \"./product\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: \"home\"\r\n    };\r\n    this.handleMode = this.handleMode.bind(this);\r\n  }\r\n\r\n  handleMode(e) {\r\n    this.setState({ mode: e });\r\n  }\r\n\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    const { mode } = this.state;\r\n    return (\r\n      <main className=\"sub-container\">\r\n        <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n          <div className=\"navbar-brand\" onClick={() => this.handleMode(\"home\")}>\r\n            <img src={Logo} width=\"30\" height=\"30\" alt=\"logo\" />\r\n          </div>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#nav-items\"\r\n            aria-controls=\"nav-items\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"nav-items\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <button\r\n                  className=\"nav-link btn btn-link\"\r\n                  onClick={() => this.handleMode(\"banner\")}\r\n                >\r\n                  Баннер\r\n                </button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <button\r\n                  className=\"nav-link btn btn-link\"\r\n                  onClick={() => this.handleMode(\"product\")}\r\n                >\r\n                  Бүтээгдэхүүн\r\n                </button>\r\n              </li>\r\n            </ul>\r\n            <button\r\n              onClick={this.onLogoutClick}\r\n              className=\"btn btn-outline-info my-2 my-sm-0 float-right\"\r\n              id=\"btn\"\r\n            >\r\n              Гарах\r\n            </button>\r\n          </div>\r\n        </nav>\r\n        {mode === \"home\" ? (\r\n          <Home user={user} />\r\n        ) : mode === \"banner\" ? (\r\n          <Banner />\r\n        ) : (\r\n          <Prodoct />\r\n        )}\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport { getBanners } from \"../../actions/custAction\";\r\nclass Banner extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: \"\",\r\n      banners: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    getBanners()\r\n      .then(res => {\r\n        this.setState({\r\n          count: res.data.count,\r\n          banners: res.data.banners\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  indicators = () => {\r\n    var li = new Array(this.state.count)\r\n      .fill(0)\r\n      .map((zero, index) =>\r\n        index === 0 ? (\r\n          <li\r\n            data-target=\"#banner\"\r\n            data-slide-to={index}\r\n            key={index}\r\n            className=\"active\"\r\n            id=\"carousel-dot\"\r\n          />\r\n        ) : (\r\n          <li\r\n            data-target=\"#banner\"\r\n            data-slide-to={index}\r\n            key={index}\r\n            id=\"carousel-dot\"\r\n          />\r\n        )\r\n      );\r\n    return <ol className=\"carousel-indicators\">{li}</ol>;\r\n  };\r\n\r\n  banners = () => {\r\n    const paths = this.state.banners.map(object => {\r\n      return \"/\" + object.image;\r\n    });\r\n    var img = new Array(this.state.banners.length).fill(0).map((zero, index) =>\r\n      index === 0 ? (\r\n        <div className=\"carousel-item active\" key={index}>\r\n          <img src={paths[index]} alt={index} className=\"d-block w-100\" />\r\n        </div>\r\n      ) : (\r\n        <div className=\"carousel-item\" key={index}>\r\n          <img src={paths[index]} alt={index} className=\"d-block w-100\" />\r\n        </div>\r\n      )\r\n    );\r\n    return img;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"banner\" className=\"carousel slide\" data-ride=\"carousel\">\r\n        {this.indicators()}\r\n        <div className=\"carousel-inner\">{this.banners()}</div>\r\n        <a\r\n          className=\"carousel-control-prev\"\r\n          href=\"#banner\"\r\n          role=\"button\"\r\n          data-slide=\"prev\"\r\n        >\r\n          <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\" />\r\n          <span className=\"sr-only\">Previous</span>\r\n        </a>\r\n        <a\r\n          className=\"carousel-control-next\"\r\n          href=\"#banner\"\r\n          role=\"button\"\r\n          data-slide=\"next\"\r\n        >\r\n          <span className=\"carousel-control-next-icon\" aria-hidden=\"true\" />\r\n          <span className=\"sr-only\">Next</span>\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Banner;\r\n","import React, { Component } from \"react\";\r\nimport Logop from \"../../images/logopic.png\";\r\nimport Logow from \"../../images/logoword.png\";\r\nimport Banner from \"./banner\";\r\n\r\nimport \"./customer.css\";\r\nclass Customer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      menu: false\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({ menu: !this.state.menu });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-extended\">\r\n        <header className=\"navbar navbar-extend-sm navbar-light\" id=\"nav\">\r\n          <button className=\"col-sm-auto btn btn-link\" href=\"\">\r\n            <img src={Logop} alt=\"pic\" className=\"img-fluid\" id=\"logo\" />\r\n          </button>\r\n          <button className=\"col btn btn-link\">\r\n            <img src={Logow} alt=\"word\" className=\"img-fluid\" id=\"logo\" />\r\n          </button>\r\n          <div\r\n            className={this.state.menu ? \"change\" : \"nochange\"}\r\n            onClick={this.toggle}\r\n            id=\"menu\"\r\n          >\r\n            <div className=\"bar1\" />\r\n            <div className=\"bar2\" />\r\n            <div className=\"bar3\" />\r\n          </div>\r\n        </header>\r\n        <Banner />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Customer;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport PrivateRouter from \"./login/private/privateroute\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./login/utils/setAuthToken\";\n\nimport { setCurrentUser, logoutUser } from \"./login/actions/authAction\";\n\nimport Login from \"./components/admin/login\";\nimport Register from \"./components/admin/register\";\nimport Dashboard from \"./components/admin/dashboard\";\nimport Customer from \"./components/client/customer\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./components/login\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"container-extended\">\n            <div className=\"row vh-100\">\n              <div className=\"col\">\n                <Route exact path=\"/\" component={Customer} />\n                <Route exact path=\"/admin\" component={Login} />\n                <Route exact path=\"/admin/register\" component={Register} />\n                <Switch>\n                  <PrivateRouter\n                    exact\n                    path=\"/admin/dashboard\"\n                    component={Dashboard}\n                  />\n                </Switch>\n              </div>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}